# Generated by Django 2.1.7 on 2019-03-20 20:59

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('es_docente', models.BooleanField(default=False)),
                ('es_estudiante', models.BooleanField(default=False)),
                ('es_revisor', models.BooleanField(default=False)),
                ('es_verificador', models.BooleanField(default=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Alumno',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('es_presidente', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Carrera',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=64)),
                ('activo', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Distributivo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grupo', models.CharField(default='1', max_length=16)),
                ('activo', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Docente',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cedula', models.CharField(default='9999999999', max_length=10)),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Documento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=8)),
                ('descripci√≥n', models.CharField(max_length=512)),
                ('activo', models.BooleanField(default=True)),
                ('mensaje_compromiso', models.CharField(default='', max_length=1024)),
                ('parcial', models.CharField(choices=[('0', 'TODOS'), ('1', '1'), ('2', '2')], default='1', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Estudiante',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cedula', models.CharField(default='9999999999', max_length=10)),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Firma',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('hash', models.CharField(max_length=512)),
                ('observacion', models.CharField(blank=True, max_length=128)),
                ('alumno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registro.Alumno')),
            ],
        ),
        migrations.CreateModel(
            name='Informe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_habilitacion', models.DateField()),
                ('fecha_generacion', models.DateTimeField(blank=True, null=True)),
                ('parcial', models.SmallIntegerField(default=1)),
                ('hash', models.CharField(blank=True, max_length=512, null=True)),
                ('archivo', models.URLField(blank=True, null=True)),
                ('estado', models.CharField(default='A', max_length=1)),
                ('fecha_cierre', models.DateField()),
                ('distributivo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registro.Distributivo')),
                ('documento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registro.Documento')),
            ],
        ),
        migrations.CreateModel(
            name='Materia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=32)),
                ('nombre', models.CharField(max_length=128)),
                ('nivel', models.SmallIntegerField(default=0)),
                ('activo', models.BooleanField(default=False)),
                ('carrera', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registro.Carrera')),
            ],
        ),
        migrations.CreateModel(
            name='Periodo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.IntegerField()),
                ('descripcion', models.CharField(max_length=128)),
                ('activo', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='TipoDocumento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=64)),
                ('solo_presidente', models.BooleanField(default=False)),
                ('activo', models.BooleanField(default=True)),
            ],
        ),
        migrations.AddField(
            model_name='firma',
            name='informe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registro.Informe'),
        ),
        migrations.AddField(
            model_name='documento',
            name='tipo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registro.TipoDocumento'),
        ),
        migrations.AddField(
            model_name='distributivo',
            name='docente',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registro.Docente'),
        ),
        migrations.AddField(
            model_name='distributivo',
            name='materia',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registro.Materia'),
        ),
        migrations.AddField(
            model_name='distributivo',
            name='periodo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registro.Periodo'),
        ),
        migrations.AddField(
            model_name='carrera',
            name='director',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='registro.Docente'),
        ),
        migrations.AddField(
            model_name='alumno',
            name='distributivo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registro.Distributivo'),
        ),
        migrations.AddField(
            model_name='alumno',
            name='estudiante',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registro.Estudiante'),
        ),
    ]
